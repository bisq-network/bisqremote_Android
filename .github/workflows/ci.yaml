name: CI

on:
    pull_request:
        branches: [ master ]

    # Allows for running this workflow manually from the Actions tab
    workflow_dispatch:

jobs:
    analyze:
        name: Analyze
        if: ${{ github.actor != 'dependabot[bot]' }}
        runs-on: ubuntu-latest
        timeout-minutes: 10
        steps:
            -   name: Checkout the code
                uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8

            -   name: Set up JDK 11
                uses: actions/setup-java@a18c333f3f14249953dab3e186e5e21bf3390f1d
                with:
                    java-version: '11'
                    distribution: 'temurin'
                    cache: gradle

            -   name: Clear gradle cache
                run: |
                    mv ~/.gradle ~/.invalid || true

            -   name: Cache dependencies
                uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7
                with:
                    path: |
                        ~/.gradle/caches
                        ~/.gradle/wrapper
                    key: ${{ runner.os }}-gradle-${{ env.CACHE_VERSION }}-${{ hashFiles('**/**.gradle.kts', '**/gradle/wrapper/gradle-wrapper.properties', '**/libs.versions.toml') }}

            -   name: Check Gradle wrapper
                uses: gradle/wrapper-validation-action@55e685c48d84285a5b0418cd094606e199cca3b6

            -   name: Check code style
                run: ./gradlew ktlintCheck

            -   name: Check code quality
                run: ./gradlew detekt

            # TODO: Investigate why this is not working and encountering the following:
            # `snyk` requires an authenticated account. Please run `snyk auth` and try again
            # -   name: Check dependencies with snyk
            #     uses: snyk/actions/gradle-jdk@dc22abdbe8ec00e2a925256fef96f319ca5510ce
            #     continue-on-error: true # To make sure that SARIF upload gets called
            #     env:
            #         SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
            #     with:
            #         args: --sarif-file-output=snyk.sarif
            #
            # -   name: Upload snyk result to GitHub Code Scanning
            #     uses: github/codeql-action/upload-sarif@81b419c908d540ec4c7da9bfb4b5d941fca8f624
            #     with:
            #         sarif_file: snyk.sarif

            -   name: Upload reports
                uses: actions/upload-artifact@83fd05a356d7e2593de66fc9913b3002723633cb
                with:
                    name: Test-Reports
                    path: app/build/reports
                if: always()

    unit-tests:
        name: Unit tests
        runs-on: ubuntu-latest
        timeout-minutes: 10
        needs: analyze
        steps:
            -   name: Checkout the code
                uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8

            -   name: Set up JDK 11
                uses: actions/setup-java@a18c333f3f14249953dab3e186e5e21bf3390f1d
                with:
                    java-version: '11'
                    distribution: 'temurin'
                    cache: gradle

            -   name: Clear gradle cache
                run: |
                    mv ~/.gradle ~/.invalid || true

            -   name: Cache dependencies
                uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7
                with:
                    path: |
                        ~/.gradle/caches
                        ~/.gradle/wrapper
                    key: ${{ runner.os }}-gradle-${{ env.CACHE_VERSION }}-${{ hashFiles('**/**.gradle.kts', '**/gradle/wrapper/gradle-wrapper.properties', '**/libs.versions.toml') }}

            -   name: Check Gradle wrapper
                uses: gradle/wrapper-validation-action@55e685c48d84285a5b0418cd094606e199cca3b6

            # TODO: Add code coverage metrics
            # See https://about.codecov.io/blog/code-coverage-for-android-development-using-kotlin-jacoco-github-actions-and-codecov/
            -   name: Run unit tests
                run: ./gradlew testDebugUnitTest

            -   name: Upload reports
                uses: actions/upload-artifact@83fd05a356d7e2593de66fc9913b3002723633cb
                with:
                    name: Test-Reports
                    path: app/build/reports
                if: always()

    instrumentation-tests:
        name: Instrumentation tests on ${{ matrix.target }} API ${{ matrix.api-level }}
        runs-on: macos-latest
        timeout-minutes: 30
        needs: unit-tests
        strategy:
            fail-fast: true
            matrix:
                api-level: [ 21, 32 ]
        steps:
            -   name: Checkout the code
                uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8

            -   name: Set up JDK 11
                uses: actions/setup-java@a18c333f3f14249953dab3e186e5e21bf3390f1d
                with:
                    java-version: '11'
                    distribution: 'temurin'
                    cache: gradle

            -   name: Clear gradle cache
                run: |
                    mv ~/.gradle ~/.invalid || true

            -   name: Cache dependencies
                uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7
                with:
                    path: |
                        ~/.gradle/caches
                        ~/.gradle/wrapper
                    key: ${{ runner.os }}-gradle-${{ env.CACHE_VERSION }}-${{ hashFiles('**/**.gradle.kts', '**/gradle/wrapper/gradle-wrapper.properties', '**/libs.versions.toml') }}

            -   name: Check Gradle wrapper
                uses: gradle/wrapper-validation-action@55e685c48d84285a5b0418cd094606e199cca3b6

            # API 30+ emulators only have x86_64 system images
            -   name: Get AVD info
                uses: ./.github/actions/get-avd-info
                id: avd-info
                with:
                    api-level: ${{ matrix.api-level }}

            # Retrieve the cached emulator snapshot
            -   name: Retrieve cached emulator snapshot
                uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7
                id: avd-cache
                with:
                    path: |
                        ~/.android/avd/*
                        ~/.android/adb*
                    key: ${{ runner.os }}-avd-${{ env.CACHE_VERSION }}-${{ steps.avd-info.outputs.arch }}-${{ steps.avd-info.outputs.target }}-${{ matrix.api-level }}

            # Create a new emulator snapshot if it isn't present in the cache
            -   name: Create AVD snapshot
                if: steps.avd-cache.outputs.cache-hit != 'true'
                uses: reactivecircus/android-emulator-runner@d7b53ddc6e44254e1f4cf4a6ad67345837027a66
                with:
                    api-level: ${{ matrix.api-level }}
                    arch: ${{ steps.avd-info.outputs.arch }}
                    target: ${{ steps.avd-info.outputs.target }}
                    disable-animations: false
                    force-avd-creation: false
                    ram-size: 4096M
                    emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
                    script: echo "Generated AVD snapshot"

            -   name: Run instrumentation tests
                uses: reactivecircus/android-emulator-runner@d7b53ddc6e44254e1f4cf4a6ad67345837027a66
                with:
                    api-level: ${{ matrix.api-level }}
                    arch: ${{ steps.avd-info.outputs.arch }}
                    target: ${{ steps.avd-info.outputs.target }}
                    disable-animations: true
                    force-avd-creation: false
                    ram-size: 4096M
                    emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -no-snapshot-save
                    script: mv .github/debug.keystore ~/.android; ./gradlew connectedDebugAndroidTest

            -   name: Upload reports
                uses: actions/upload-artifact@83fd05a356d7e2593de66fc9913b3002723633cb
                with:
                    name: Test-Reports
                    path: app/build/reports
                if: always()
